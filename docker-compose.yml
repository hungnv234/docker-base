version: "3.7"
services:
  ## php-fpm
  php:
    container_name: php
    build:
      context: ./.docker/php-fpm
      dockerfile: Dockerfile
    volumes:
      - ../ecommerce:/ecommerce
    networks:
      - app-network
    working_dir: /ecommerce
    environment:
      PHP_IDE_CONFIG: serverName=${PROJECT_NAME}

  ## nginx
  nginx:
    container_name: web
    build:
      context: ./.docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ../ecommerce:/ecommerce
#      - type: bind
#        source: ./swagger
#        target: /swagger
      - type: bind
        source: ./.docker/nginx/conf.d
        target: /etc/nginx/conf.d
        read_only: true
    networks:
      - app-network
    ports:
      - "80:80"
      - "443:443"
    working_dir: /ecommerce

  db:
    image: postgres:12.3
    volumes:
      - db_backup:/var/lib/postgresql/data
    ports:
      - 5432:5432
    container_name: db
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  ## redis
  redis:
    container_name: redis
    image: redis:alpine

  ## node
#  node:
#    container_name: node
#    image: node:latest
#    volumes:
#      - type: bind
#        source: ../ecommerce
#        target: /ecommerce
#      - type: bind
#        source: .docker/node/scripts
#        target: /scripts
#        read_only: true
#    networks:
#      - app-network
#    working_dir: /ecommerce
#    entrypoint: /scripts/bootstrap.sh

volumes:
  db_backup:

#Docker Networks
networks:
  app-network:
    driver: bridge
